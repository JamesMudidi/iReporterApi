/**
 * iRepoter
 * iReporter enables any/every citizen to bring any form of corruption to the notice of appropriate authorities and the general public. Users can also report on things that need government intervention around the community  Checkout the API on [Github](https://github.com/JamesMudidi/iReporterApi/tree/develop-v2) 
 *
 * OpenAPI spec version: 2.0
 * Contact: mudidi.jimmy@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.api

import io.swagger.client.model.Intervention
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object InterventionApi {

  /**
   * 
   * 
   * Expected answers:
   *   code 400 :  (Invalid ID supplied)
   *   code 404 :  (intervention not found)
   *   code 405 :  (Validation exception)
   * 
   * @param body create a intervention
   */
  def createintervention(body: Intervention): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/JamesMudidi/iRepoter/1.0.0", "/intervention", "application/json")
      .withBody(body)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Unit](404)
      .withErrorResponse[Unit](405)
        /**
   * 
   * 
   * Expected answers:
   *   code 400 :  (Invalid ID supplied)
   *   code 404 :  (intervention not found)
   * 
   * @param interventionId intervention id to delete
   * @param apiKey 
   */
  def deleteintervention(interventionId: Long, apiKey: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, "https://virtserver.swaggerhub.com/JamesMudidi/iRepoter/1.0.0", "/intervention/{intervention_id}/", "application/json")
      .withPathParam("interventionId", interventionId)
      .withHeaderParam("api_key", apiKey)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Unit](404)
        /**
   * Get all the interventions
   * 
   * Expected answers:
   *   code 200 : Seq[Intervention] (successful operation)
   *   code 400 :  (Invalid status value)
   * 
   * @param status Status values that need to be considered for filter
   */
  def findinterventionByStatus(status: Seq[String]): ApiRequest[Seq[Intervention]] =
    ApiRequest[Seq[Intervention]](ApiMethods.GET, "https://virtserver.swaggerhub.com/JamesMudidi/iRepoter/1.0.0", "/intervention/", "application/json")
      .withQueryParam("status", ArrayValues(status, MULTI))
      .withSuccessResponse[Seq[Intervention]](200)
      .withErrorResponse[Unit](400)
        /**
   * Returns a single intervention
   * 
   * Expected answers:
   *   code 200 : Intervention (successful operation)
   *   code 400 :  (Invalid ID supplied)
   *   code 404 :  (intervention not found)
   * 
   * Available security schemes:
   *   api_key (apiKey)
   * 
   * @param interventionId ID of intervention to return
   */
  def getinterventionById(interventionId: Long)(implicit apiKey: ApiKeyValue): ApiRequest[Intervention] =
    ApiRequest[Intervention](ApiMethods.GET, "https://virtserver.swaggerhub.com/JamesMudidi/iRepoter/1.0.0", "/intervention/{intervention_id}", "application/json")
      .withApiKey(apiKey, "api_key", HEADER)
      .withPathParam("interventionId", interventionId)
      .withSuccessResponse[Intervention](200)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Unit](404)
        /**
   * 
   * 
   * Expected answers:
   *   code 405 :  (Invalid input)
   * 
   * @param interventionId ID of intervention that needs to be updated
   * @param name Updated name of the intervention
   * @param status Updated status of the intervention
   */
  def updateinterventionWithForm(interventionId: Long, name: Option[String] = None, status: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.PATCH, "https://virtserver.swaggerhub.com/JamesMudidi/iRepoter/1.0.0", "/intervention/{intervention_id}/location", "application/x-www-form-urlencoded")
      .withFormParam("name", name)
      .withFormParam("status", status)
      .withPathParam("interventionId", interventionId)
      .withErrorResponse[Unit](405)
        /**
   * 
   * 
   * Expected answers:
   *   code 405 :  (Invalid input)
   * 
   * @param interventionId ID of intervention that needs to be updated
   * @param name Updated name of the intervention
   * @param status Updated status of the intervention
   */
  def updateinterventionWithForm_0(interventionId: Long, name: Option[String] = None, status: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.PATCH, "https://virtserver.swaggerhub.com/JamesMudidi/iRepoter/1.0.0", "/intervention/{intervention_id}/comment", "application/x-www-form-urlencoded")
      .withFormParam("name", name)
      .withFormParam("status", status)
      .withPathParam("interventionId", interventionId)
      .withErrorResponse[Unit](405)
        /**
   * 
   * 
   * Expected answers:
   *   code 405 :  (Invalid input)
   * 
   * @param interventionId ID of intervention that needs to be updated
   * @param name Updated name of the intervention
   * @param status Updated status of the intervention
   */
  def updateinterventionWithForm_1(interventionId: Long, name: Option[String] = None, status: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.PATCH, "https://virtserver.swaggerhub.com/JamesMudidi/iRepoter/1.0.0", "/intervention/{intervention_id}/status", "application/x-www-form-urlencoded")
      .withFormParam("name", name)
      .withFormParam("status", status)
      .withPathParam("interventionId", interventionId)
      .withErrorResponse[Unit](405)
      

}

